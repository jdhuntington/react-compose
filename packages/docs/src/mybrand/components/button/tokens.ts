import { Theme } from "../../../lib/theme";

export const tokens = (theme: Theme) => {
  const { effects, semanticColors } = theme;
  return {
    borderRadius: effects.roundedCorner2,
    borderStyle: "solid",
    borderStyleFocused: "solid",
    borderWidth: 1,
    childrenGap: 8,
    contentPadding: "0px 20px",
    cursor: "pointer",
    iconSize: 16,
    iconWeight: 400,
    lineHeight: 1,
    minHeight: 32,
    minWidth: 100,
    textFamily: "inherit",
    textSize: 14,
    textWeight: 300,
    disableBackgroundColor: semanticColors.buttonBackgroundDisabled,
    disableBackgroundColorHovered: semanticColors.buttonBackgroundDisabled,
    disableBackgroundColorPressed: semanticColors.buttonBackgroundDisabled,
    disableHighContrastBackgroundColor: "Window",
    disableHighContrastBackgroundColorHovered: "Window",
    disableHighContrastBackgroundColorPressed: "Window",
    disableBorderColor: semanticColors.buttonBorderDisabled,
    disableBorderColorHovered: semanticColors.buttonBorderDisabled,
    disableBorderColorPressed: semanticColors.buttonBorderDisabled,
    disableHighContrastBorderColor: "GrayText",
    disableHighContrastBorderColorHovered: "GrayText",
    disableHighContrastBorderColorPressed: "GrayText",
    disableColor: semanticColors.buttonTextDisabled,
    disableColorHovered: semanticColors.buttonTextDisabled,
    disableColorPressed: semanticColors.buttonTextDisabled,
    disableHighContrastColor: "GrayText",
    disableHighContrastColorHovered: "GrayText",
    disableHighContrastColorPressed: "GrayText",
    disableCursor: "default",
    disableIconColor: semanticColors.buttonTextDisabled,
    disableIconColorHovered: semanticColors.buttonTextDisabled,
    disableIconColorPressed: semanticColors.buttonTextDisabled,
    disableHighContrastIconColor: "GrayText",
    disableHighContrastIconColorHovered: "GrayText",
    disableHighContrastIconColorPressed: "GrayText",
    enableBackgroundColor: semanticColors.buttonBackground,
    enableBackgroundColorHovered: semanticColors.buttonBackgroundHovered,
    enableBackgroundColorPressed: semanticColors.buttonBackgroundPressed,
    enableBorderColor: semanticColors.buttonBorder,
    enableBorderColorHovered: semanticColors.buttonBorder,
    enableBorderColorPressed: semanticColors.buttonBorder,
    enableHighContrastBorderColorHovered: "Highlight",
    enableHighContrastBorderColorPressed: "Highlight",
    enableColor: semanticColors.buttonText,
    enableColorHovered: semanticColors.buttonTextHovered,
    enableColorPressed: semanticColors.buttonTextPressed,
    enableHighContrastColorHovered: "Highlight",
    enableHighContrastColorPressed: "Highlight",
    enableIconColor: semanticColors.buttonText,
    enableIconColorHovered: semanticColors.buttonTextHovered,
    enableIconColorPressed: semanticColors.buttonTextPressed,
    enableHighContrastIconColorHovered: "Highlight",
    enableHighContrastIconColorPressed: "Highlight"
  };
};

export type TokenTypes = ReturnType<typeof tokens>;
